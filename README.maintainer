# README.maintainer

This package is built with the GNU Build System.  A good reference
for the whole process is at:
  http://sources.redhat.com/autobook/autobook/autobook.html#SEC_Top

The manuals are here:

	http://www.gnu.org/manual/automake/html_mono/automake.html
	http://www.gnu.org/manual/autoconf/html_mono/autoconf.html
	http://www.gnu.org/manual/libtool/html_mono/libtool.html


Requirements:

	You'll need the following GNU tools:
		autoconf, automake, libtool, make, m4, perl, gcc

	Get the latest config.guess & config.sub from:
		 ftp://ftp.gnu.org/gnu/config
	Put them in the config directory.

	Copy the m4 macros included with the libtool distribution
	into our local m4 includes:
		cp /usr/local/share/aclocal/libtool.m4 ./acinclude.m4

	To build the documentation you will need the edoc package and
	it's required applications syntax_tools and xmerl.  If these
	are not installed in the regular code loading path you can  
	supply the paths required with configure options:

		--with-edoc=/tmp/edoc/ebin
		--with-syntax_tools=/tmp/syntax_tools/ebin
		--with-xmerl=/tmp/xmerl/ebin

	To skip building documentation use:

		--without-edoc


Making changes:

	The only files which should (theoretically) be edited are:
		configure.ac & Makefile.am	


Building:

	run aclocal                   (creates aclocal.m4)
	run autoheader                (creates config.h.in)
	run autoconf                  (creates configure & autom4te.cache)
	run `libtoolize --automake`   (creates config/ltmain.sh)
	run `automake --add-missing`  (creates Makefile.in)

	[Note:  you should be able to run `autoreconf` to do all 
	        the above afterwards when changes are made]

	run ./configure               (creates Makefile)
	run make                      (builds entire package)

Options to configure:

  --enable-debug          Turn on debugging
  --enable-threads        build for a threaded emulator
  --enable-select         use the select() system call
  --with-edoc=PATH        load edoc from PATH
  --with-syntax_tools=PATH  load syntax_tools from PATH
  --with-xmerl=PATH       load xmerl from PATH

Environment variables:
  ERL_TOP     Erlang top level directory
  ERLC        Erlang compiler command
  ERL         Erlang emulator command
  NETACC_TOP  Netaccess driver package top level directory


Report bugs to <netaccess-bugs@motivity.ca>.
